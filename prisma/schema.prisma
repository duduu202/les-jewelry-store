// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())

  address   Address?
  //coupon     Coupon?
  //order     Order?

  name     String
  CPF      String?
  email    String   @unique
  password String   @default("")
  phone    String  @default("")
  role     UserRole @default(Client)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Address {
  id         String   @id @default(uuid())

  user_id    String   @unique
  user       User     @relation(fields: [user_id], references: [id])

  street     String
  number     String
  district   String
  city       String
  state      String
  zip_code   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("addresses")
}

//model Product {
//  id              String         @id @default(uuid())
//  price           Float
//  stock           Int
//  name            String
//  description     String
//  order           Order?
//  created_at      DateTime       @default(now())
//  updated_at      DateTime       @updatedAt
//
//  @@map("products")
//}

//model Purchase {
//  id              String         @id @default(uuid())
//
//  user_id    String?   @unique
//  user       User?     @relation(fields: [user_id], references: [id])
//
//  product_id String?   @unique
//  product    Product?  @relation(fields: [product_id], references: [id])
//
//  created_at      DateTime       @default(now())
//  updated_at      DateTime       @updatedAt
//
//  @@map("purchases")
//}

//model Order {
//  id              String         @id @default(uuid())
//
//  status_history  Status[]
//
//  user_id    String?   @unique
//  user       User?     @relation(fields: [user_id], references: [id])
//
//  product_id String?   @unique
//  product    Product?  @relation(fields: [product_id], references: [id])
//
//  created_at      DateTime       @default(now())
//  updated_at      DateTime       @updatedAt
//
//  @@map("orders")
//}


//model Status {
//  id              String         @id @default(uuid())
//  order_id    String?   @unique
//  order       Order?     @relation(fields: [order_id], references: [id])
//
//  name          Status_type @default(Processing)
//  created_at      DateTime       @default(now())
//  updated_at      DateTime       @updatedAt
//
//  @@map("status")
//}

//enum Status_type {
//  Processing
//  In_transit
//  Delivered
//}
//
//model Coupon {
//  id              String         @id @default(uuid())
//
//  user_id    String?   @unique
//  user       User?     @relation(fields: [user_id], references: [id])
//
//  code            String
//  discount        Float
//  available_until DateTime
//  created_at      DateTime       @default(now())
//  updated_at      DateTime       @updatedAt
//
//  @@map("coupons")
//}

enum UserRole {
  Master
  Client
}


